RANDOM_SEED 42

OUTER_FOR (level = 1; level <= 9; level += 1) BEGIN
  OUTER_SET $spell(~abjurer~ ~%level%~ ~length~) = 0
  OUTER_SET $spell(~conjurer~ ~%level%~ ~length~) = 0
  OUTER_SET $spell(~diviner~ ~%level%~ ~length~) = 0
  OUTER_SET $spell(~enchanter~ ~%level%~ ~length~) = 0
  OUTER_SET $spell(~illusionist~ ~%level%~ ~length~) = 0
  OUTER_SET $spell(~invoker~ ~%level%~ ~length~) = 0
  OUTER_SET $spell(~necromancer~ ~%level%~ ~length~) = 0
  OUTER_SET $spell(~transmuter~ ~%level%~ ~length~) = 0
  OUTER_SET $spell(~bogus~ ~%level%~ ~length~) = 0
END

COPY_EXISTING_REGEXP GLOB ~^SPWI[1-9]\(0[1-9]\|[1-4][0-9]\)\.spl$~ ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) BEGIN
    READ_SHORT 0x1c spell_type
    PATCH_IF (spell_type == 1) BEGIN // arcane, just to be sure
      READ_BYTE 0x21 priest_flag
      READ_SHORT 0x1e specialist_flag
      READ_LONG  0x34 level
      TO_UPPER SOURCE_RES
	  PATCH_IF (priest_flag BOR 0b00111111 = 0b00111111) & (specialist_flag == 0x0040) BEGIN // abjurer
        SPRINT school ~abjurer~
      END
	  ELSE PATCH_IF (priest_flag BOR 0b00111111 = 0b00111111) & (specialist_flag == 0x0080) BEGIN // conjurer
        SPRINT school ~conjurer~
      END
	  ELSE PATCH_IF (priest_flag BOR 0b00111111 = 0b00111111) & (specialist_flag == 0x0100) BEGIN // diviner
        SPRINT school ~diviner~
      END
	  ELSE PATCH_IF (priest_flag BOR 0b00111111 = 0b00111111) & (specialist_flag == 0x0200) BEGIN // enchanter
        SPRINT school ~enchanter~
      END
	  ELSE PATCH_IF (priest_flag BOR 0b00111111 = 0b00111111) & (specialist_flag == 0x0400) BEGIN // illusionist
        SPRINT school ~illusionist~
      END
	  ELSE PATCH_IF (priest_flag BOR 0b00111111 = 0b00111111) & (specialist_flag == 0x0800) BEGIN // invoker
        SPRINT school ~invoker~
      END
	  ELSE PATCH_IF (priest_flag BOR 0b00111111 = 0b00111111) & (specialist_flag == 0x1000) BEGIN // necromancer
        SPRINT school ~necromancer~
      END
	  ELSE PATCH_IF (priest_flag BOR 0b00111111 = 0b00111111) & (specialist_flag == 0x2000) BEGIN // transmuter
        SPRINT school ~transmuter~
      END
      ELSE PATCH_IF (priest_flag BAND 0b11000000 = 0b11000000) BEGIN // disabled
        SPRINT school ~bogus~
      END
      PATCH_IF (level > 0 && level <= 9) BEGIN
        SET index = $spell(~%school%~ ~%level%~ ~length~)
        SPRINT $spell(~%school%~ ~%level%~ ~%index%~) ~%SOURCE_RES%~
        SET $spell(~%school%~ ~%level%~ ~length~) += 1
        SET $spell(~%school%~ ~%SOURCE_RES%~) = 1
//        SET $spell(~%SOURCE_RES%~ ~excl~) = (specialist_flag BAND 0b111111) // store the exclusionary school
        SET $spell(~%SOURCE_RES%~ ~level~) = level
      END
    END
  END
  BUT_ONLY

DEFINE_PATCH_MACRO ~REMOVE_SPELLS_OF_TYPE~ BEGIN
  FOR (level = 1; level <= 9; level += 1) BEGIN
    SET length = $spell(~%school%~ ~%level%~ ~length~)
    FOR (i = 0; i < length; i += 1) BEGIN
      SPRINT spell $spell(~%school%~ ~%level%~ ~%i%~)
      REMOVE_KNOWN_SPELL ~%spell%~
	  REMOVE_MEMORIZED_SPELL ~%spell%~
    END
  END
END

// removes all spells that the class shouldn't have access to anymore
DEFINE_PATCH_FUNCTION ~REMOVE_BAD_KNOWN_SPELLS~
BEGIN
  PATCH_IF (spell_school == 8) BEGIN // remove transmuter spells from abjurers
    SPRINT school ~abjurer~
    LAUNCH_PATCH_MACRO ~REMOVE_SPELLS_OF_TYPE~
  END
  ELSE PATCH_IF (spell_school == 3) BEGIN // remove diviner spells from conjurers
    SPRINT school ~conjurer~
    LAUNCH_PATCH_MACRO ~REMOVE_SPELLS_OF_TYPE~
  END
  ELSE PATCH_IF (spell_school == 2) BEGIN // remove conjurer spells from diviners
    SPRINT school ~diviner~
    LAUNCH_PATCH_MACRO ~REMOVE_SPELLS_OF_TYPE~
  END
  ELSE PATCH_IF (spell_school == 6) BEGIN // remove invoker spells from enchanters
    SPRINT school ~enchanter~
    LAUNCH_PATCH_MACRO ~REMOVE_SPELLS_OF_TYPE~
  END
  ELSE PATCH_IF (spell_school == 7) BEGIN // remove necromancer spells from illusionists
    SPRINT school ~illusionist~
    LAUNCH_PATCH_MACRO ~REMOVE_SPELLS_OF_TYPE~
  END
  ELSE PATCH_IF (spell_school == 4) BEGIN // remove enchanter spells from invokers
    SPRINT school ~invoker~
    LAUNCH_PATCH_MACRO ~REMOVE_SPELLS_OF_TYPE~
  END
  ELSE PATCH_IF (spell_school == 5) BEGIN // remove illusionist spells from necromancers
    SPRINT school ~necromancer~
    LAUNCH_PATCH_MACRO ~REMOVE_SPELLS_OF_TYPE~
  END
  ELSE PATCH_IF (spell_school == 1) BEGIN // remove abjurer spells from transmuters
    SPRINT school ~transmuter~
    LAUNCH_PATCH_MACRO ~REMOVE_SPELLS_OF_TYPE~
  END

  // remove bogus spells from all classes
  SPRINT school ~bogus~
  LAUNCH_PATCH_MACRO ~REMOVE_SPELLS_OF_TYPE~
END

// determines highest level of spells that can be cast
DEFINE_PATCH_FUNCTION ~DETERMINE_MAX_SPELL_LEVEL~
  RET highest_spell_level
BEGIN
  READ_LONG 0x2a8 memorisation_info_off
  READ_LONG 0x2ac num_memorisation_info
  SET highest_spell_level = 0
  FOR (i = 0; i < num_memorisation_info; i += 1) BEGIN
    READ_SHORT (memorisation_info_off + 0x10*i + 0x00) level
    READ_SHORT (memorisation_info_off + 0x10*i + 0x02) num_memorisable
    READ_SHORT (memorisation_info_off + 0x10*i + 0x06) spell_school
    PATCH_IF (spell_school == 0 && num_memorisable > 0) BEGIN // can memorise at least 1 arcane spell at this level
      SET level += 1 // level is stored as one below actual value
      PATCH_IF (level > highest_spell_level) BEGIN // update highest_spell_level if new level is greater than those seen previously
        SET highest_spell_level = level
      END
    END
  END
END
  
// fix spellbooks of arcane casters
ACTION_PHP_EACH JOINABLE_NPC_ARRAY AS cre => dv BEGIN
  PRINT ~%cre% => %dv%~ 
  COPY_EXISTING ~%cre%~ ~override~
	PATCH_IF (SOURCE_SIZE > 0x2d3) BEGIN
      READ_BYTE 0x273 class
	  READ_BYTE 0x246 kit
      
      PATCH_IF (class == 1 || class == 5 || class == 7 || class == 10 || class == 13 || class == 14 || class == 17 || class == 19) BEGIN // arcane casters
        SET abjurer = 0
		SET conjurer = 0
		SET diviner = 0
		SET enchanter = 0
		SET illusionist = 0
		SET invoker = 0
		SET necromancer = 0
		SET transmuter = 0

        // remove old spells
        /*PATCH_IF (class == 1 || class == 5 || class == 7 || class == 10 || class == 13 || class == 14 || class == 17 || class == 19) & (kit == 16384 || kit == 16385 || kit == 16386 || kit == 16387 || kit == 16394 || kit == 16395 || kit == 16396 || kit == 16397 || kit == 16398 || kit == 16399 || kit == 16403 || kit == 16404 || kit == 16405 || kit == 1073741824 || kit == 16417 || kit == 16418 || kit == 16419 || kit == 16424 || kit == 16425 || kit == -2147483648) BEGIN // generalist mage
          SET generalist = 1
        END*/
		PATCH_IF (class == 1 || class == 7 || class == 10 || class == 13 || class == 14 || class == 17) & (kit == 64) BEGIN // abjurer
          SET abjurer = 1
        END
		PATCH_IF (class == 1 || class == 7 || class == 10 || class == 13 || class == 14 || class == 17) & (kit == 128) BEGIN // conjurer
          SET conjurer = 1
        END
		PATCH_IF (class == 1 || class == 7 || class == 10 || class == 13 || class == 14 || class == 17) & (kit == 256) BEGIN // diviner
          SET diviner = 1
        END
		PATCH_IF (class == 1 || class == 7 || class == 10 || class == 13 || class == 14 || class == 17) & (kit == 512) BEGIN // enchanter
          SET enchanter = 1
        END
		PATCH_IF (class == 1 || class == 7 || class == 10 || class == 13 || class == 14 || class == 17) & (kit == 1024) BEGIN // illusionist
          SET illusionist = 1
        END
		PATCH_IF (class == 1 || class == 7 || class == 10 || class == 13 || class == 14 || class == 17) & (kit == 2048) BEGIN // invoker
          SET invoker = 1
        END
		PATCH_IF (class == 1 || class == 7 || class == 10 || class == 13 || class == 14 || class == 17) & (kit == 4096) BEGIN // necromancer
          SET necromancer = 1
        END
		PATCH_IF (class == 1 || class == 7 || class == 10 || class == 13 || class == 14 || class == 17) & (kit == 8192) BEGIN // transmuter
          SET transmuter = 1
        END
        
        SET spell_school = 0
        PATCH_IF (abjurer == 1) BEGIN
          SET spell_school = 8
        END
        ELSE PATCH_IF (conjurer == 1) BEGIN
          SET spell_school = 3
        END
        ELSE PATCH_IF (diviner == 1) BEGIN
          SET spell_school = 2
        END
		ELSE PATCH_IF (enchanter == 1) BEGIN
          SET spell_school = 6
        END
		ELSE PATCH_IF (illusionist == 1) BEGIN
          SET spell_school = 7
        END
		ELSE PATCH_IF (invoker == 1) BEGIN
          SET spell_school = 4
        END
		ELSE PATCH_IF (necromancer = 1) BEGIN
          SET spell_school = 5
        END
		ELSE PATCH_IF (transmuter == 1) BEGIN
          SET spell_school = 1
        END
        
        LAUNCH_PATCH_FUNCTION ~REMOVE_BAD_KNOWN_SPELLS~ END
        // determines highest level of spells that can be cast so that we only add spells up to that level
        LAUNCH_PATCH_FUNCTION ~DETERMINE_MAX_SPELL_LEVEL~ RET highest_spell_level = highest_spell_level END
      END
    END
  BUT_ONLY
END
